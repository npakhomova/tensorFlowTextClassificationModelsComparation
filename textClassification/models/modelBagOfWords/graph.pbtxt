node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "one_hot/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "one_hot/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 29
      }
    }
  }
}
node {
  name: "one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "one_hot"
  op: "OneHot"
  input: "output"
  input: "one_hot/depth"
  input: "one_hot/on_value"
  input: "one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "words/words_embeddings"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6872
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "words/words_embeddings/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\330\032\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "words/words_embeddings/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0208938773721
      }
    }
  }
}
node {
  name: "words/words_embeddings/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0208938773721
      }
    }
  }
}
node {
  name: "words/words_embeddings/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "words/words_embeddings/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "words/words_embeddings/Initializer/random_uniform/sub"
  op: "Sub"
  input: "words/words_embeddings/Initializer/random_uniform/max"
  input: "words/words_embeddings/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "words/words_embeddings/Initializer/random_uniform/mul"
  op: "Mul"
  input: "words/words_embeddings/Initializer/random_uniform/RandomUniform"
  input: "words/words_embeddings/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "words/words_embeddings/Initializer/random_uniform"
  op: "Add"
  input: "words/words_embeddings/Initializer/random_uniform/mul"
  input: "words/words_embeddings/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "words/words_embeddings/Assign"
  op: "Assign"
  input: "words/words_embeddings"
  input: "words/words_embeddings/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "words/words_embeddings/read"
  op: "Identity"
  input: "words/words_embeddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "words/embedding_lookup/Shape"
  op: "Shape"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "words/embedding_lookup/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "words/embedding_lookup/Prod"
  op: "Prod"
  input: "words/embedding_lookup/Shape"
  input: "words/embedding_lookup/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "words/embedding_lookup/Reshape"
  op: "Reshape"
  input: "input"
  input: "words/embedding_lookup/Prod"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "words/embedding_lookup/embedding_lookup"
  op: "Gather"
  input: "words/words_embeddings/read"
  input: "words/embedding_lookup/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "words/embedding_lookup/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "words/embedding_lookup/concat/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "words/embedding_lookup/concat"
  op: "Concat"
  input: "words/embedding_lookup/concat/concat_dim"
  input: "words/embedding_lookup/Shape"
  input: "words/embedding_lookup/concat/values_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "words/embedding_lookup/Reshape_1"
  op: "Reshape"
  input: "words/embedding_lookup/embedding_lookup"
  input: "words/embedding_lookup/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Max/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Max"
  op: "Max"
  input: "words/embedding_lookup/Reshape_1"
  input: "Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "logistic_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "logistic_regression.x"
      }
    }
  }
}
node {
  name: "logistic_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "logistic_regression/HistogramSummary/tag"
  input: "Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "logistic_regression.y"
      }
    }
  }
}
node {
  name: "logistic_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "logistic_regression/HistogramSummary_1/tag"
  input: "one_hot"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/weights"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "logistic_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\035\000\000\000"
      }
    }
  }
}
node {
  name: "logistic_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.244948968291
      }
    }
  }
}
node {
  name: "logistic_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.244948968291
      }
    }
  }
}
node {
  name: "logistic_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "logistic_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "logistic_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "logistic_regression/weights/Initializer/random_uniform/max"
  input: "logistic_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "logistic_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "logistic_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "logistic_regression/weights/Initializer/random_uniform/mul"
  input: "logistic_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/weights/Assign"
  op: "Assign"
  input: "logistic_regression/weights"
  input: "logistic_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "logistic_regression/weights/read"
  op: "Identity"
  input: "logistic_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/bias"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "logistic_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 29
      }
    }
  }
}
node {
  name: "logistic_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "logistic_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "logistic_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "logistic_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "logistic_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "logistic_regression/bias/Initializer/random_uniform/max"
  input: "logistic_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "logistic_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "logistic_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "logistic_regression/bias/Initializer/random_uniform/mul"
  input: "logistic_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/bias/Assign"
  op: "Assign"
  input: "logistic_regression/bias"
  input: "logistic_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "logistic_regression/bias/read"
  op: "Identity"
  input: "logistic_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "logistic_regression.weights"
      }
    }
  }
}
node {
  name: "logistic_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "logistic_regression/HistogramSummary_2/tag"
  input: "logistic_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "logistic_regression.bias"
      }
    }
  }
}
node {
  name: "logistic_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "logistic_regression/HistogramSummary_3/tag"
  input: "logistic_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/xw_plus_b/MatMul"
  op: "MatMul"
  input: "Max"
  input: "logistic_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/xw_plus_b"
  op: "BiasAdd"
  input: "logistic_regression/softmax_classifier/xw_plus_b/MatMul"
  input: "logistic_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/Softmax"
  op: "Softmax"
  input: "logistic_regression/softmax_classifier/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Cast"
  op: "Cast"
  input: "one_hot"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Shape"
  op: "Shape"
  input: "logistic_regression/softmax_classifier/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Shape_1"
  op: "Shape"
  input: "logistic_regression/softmax_classifier/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sub"
  op: "Sub"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Rank_1"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice/begin"
  op: "Pack"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice"
  op: "Slice"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Shape_1"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice/begin"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/concat"
  op: "Concat"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/concat/concat_dim"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/concat/values_0"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape"
  op: "Reshape"
  input: "logistic_regression/softmax_classifier/xw_plus_b"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Shape_2"
  op: "Shape"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sub_1"
  op: "Sub"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Rank_2"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_1/begin"
  op: "Pack"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_1"
  op: "Slice"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Shape_2"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_1/begin"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/concat_1/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/concat_1"
  op: "Concat"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/concat_1/concat_dim"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/concat_1/values_0"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_1"
  op: "Reshape"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Cast"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/xentropy"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sub_2"
  op: "Sub"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Rank"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_2/size"
  op: "Pack"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_2"
  op: "Slice"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Shape"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_2/begin"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_2"
  op: "Reshape"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/xentropy"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_2"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Squeeze"
  op: "Squeeze"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Shape_3"
  op: "Shape"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_3/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_3/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_3"
  op: "Slice"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Shape_3"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_3/begin"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_3/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_3"
  op: "Reshape"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Slice_3"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Size"
  op: "Size"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ToFloat_2"
  op: "Cast"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ToFloat_3"
  op: "Cast"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div"
  op: "Div"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ToFloat_2"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ToFloat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Equal/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Equal"
  op: "Equal"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Squeeze"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select/t"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select"
  op: "Select"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Equal"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select/t"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_4"
  op: "Reshape"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_3"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones"
  op: "Fill"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_4"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1"
  op: "Mul"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_2"
  op: "Sum"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_3"
  op: "Sum"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_1"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Greater"
  op: "Greater"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_2"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Equal_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Equal_1"
  op: "Equal"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_2"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones_like/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones_like"
  op: "Fill"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones_like/Shape"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1"
  op: "Select"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Equal_1"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones_like"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1"
  op: "Div"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_3"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/zeros_like"
  op: "ZerosLike"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value"
  op: "Select"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Greater"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/learning_rate"
  op: "Variable"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00999999977648
      }
    }
  }
}
node {
  name: "OptimizeLoss/learning_rate/Assign"
  op: "Assign"
  input: "OptimizeLoss/learning_rate"
  input: "OptimizeLoss/learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/learning_rate/read"
  op: "Identity"
  input: "OptimizeLoss/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Fill"
  op: "Fill"
  input: "OptimizeLoss/gradients/Shape"
  input: "OptimizeLoss/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/zeros_like"
  op: "ZerosLike"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/Select"
  op: "Select"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Greater"
  input: "OptimizeLoss/gradients/Fill"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/Select_1"
  op: "Select"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Greater"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/zeros_like"
  input: "OptimizeLoss/gradients/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/Select"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/Select_1"
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/Select"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/Select_1"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Shape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/truediv"
  op: "Div"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/truediv"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Sum"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Neg"
  op: "Neg"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Square"
  op: "Square"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/truediv_1"
  op: "Div"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Neg"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/mul"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Sum_1"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/Select"
  op: "Select"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Equal_1"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Equal_1"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/zeros_like"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/Select"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/Select_1"
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/Select"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/Select_1"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_3_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_3_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_1_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_3_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_3_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_3_grad/Tile"
  op: "Tile"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_3_grad/Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_3_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_3_grad/Tile"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_1_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_1_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_1_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_2_grad/Shape"
  op: "Shape"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_2_grad/Tile"
  op: "Tile"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_2_grad/Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/mul"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/mul_1"
  op: "Mul"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/mul_1"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Shape"
  op: "Shape"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Shape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_2_grad/Tile"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/mul"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Sum"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/mul_1"
  op: "Mul"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_2_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/mul_1"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Sum_1"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Reshape"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ones_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select/t"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/Select"
  op: "Select"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Equal"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/Select_1"
  op: "Select"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Equal"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/zeros_like"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/Select"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/Select_1"
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/Select"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/Select_1"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Shape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/truediv"
  op: "Div"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/tuple/control_dependency_1"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ToFloat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/truediv"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Sum"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Neg"
  op: "Neg"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Square"
  op: "Square"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/ToFloat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/truediv_1"
  op: "Div"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Neg"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Select_grad/tuple/control_dependency_1"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Sum_1"
  op: "Sum"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/mul"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Sum_1"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Reshape"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Reshape_1"
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Reshape"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Reshape_1"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_2_grad/Shape"
  op: "Shape"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/zeros_like"
  op: "ZerosLike"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_2_grad/Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/xentropy_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_grad/Shape"
  op: "Shape"
  input: "logistic_regression/softmax_classifier/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_grad/Reshape"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b_grad/BiasAddGrad"
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_grad/Reshape"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/softmax_cross_entropy_loss/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b_grad/BiasAddGrad"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b_grad/tuple/control_dependency"
  input: "logistic_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Max"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b/MatMul_grad/MatMul_1"
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b/MatMul_grad/MatMul"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b/MatMul_grad/MatMul_1"
  input: "^OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/Shape"
  op: "Shape"
  input: "words/embedding_lookup/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/add"
  op: "Add"
  input: "Max/reduction_indices"
  input: "OptimizeLoss/gradients/Max_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/mod"
  op: "Mod"
  input: "OptimizeLoss/gradients/Max_grad/add"
  input: "OptimizeLoss/gradients/Max_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/range"
  op: "Range"
  input: "OptimizeLoss/gradients/Max_grad/range/start"
  input: "OptimizeLoss/gradients/Max_grad/Size"
  input: "OptimizeLoss/gradients/Max_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/Fill"
  op: "Fill"
  input: "OptimizeLoss/gradients/Max_grad/Shape_1"
  input: "OptimizeLoss/gradients/Max_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "OptimizeLoss/gradients/Max_grad/range"
  input: "OptimizeLoss/gradients/Max_grad/mod"
  input: "OptimizeLoss/gradients/Max_grad/Shape"
  input: "OptimizeLoss/gradients/Max_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/Reshape"
  op: "Reshape"
  input: "Max"
  input: "OptimizeLoss/gradients/Max_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/Reshape_1"
  op: "Reshape"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b/MatMul_grad/tuple/control_dependency"
  input: "OptimizeLoss/gradients/Max_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/Equal"
  op: "Equal"
  input: "OptimizeLoss/gradients/Max_grad/Reshape"
  input: "words/embedding_lookup/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/Cast"
  op: "Cast"
  input: "OptimizeLoss/gradients/Max_grad/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/Sum"
  op: "Sum"
  input: "OptimizeLoss/gradients/Max_grad/Cast"
  input: "Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/Reshape_2"
  op: "Reshape"
  input: "OptimizeLoss/gradients/Max_grad/Sum"
  input: "OptimizeLoss/gradients/Max_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/Div"
  op: "Div"
  input: "OptimizeLoss/gradients/Max_grad/Cast"
  input: "OptimizeLoss/gradients/Max_grad/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/Max_grad/mul"
  op: "Mul"
  input: "OptimizeLoss/gradients/Max_grad/Div"
  input: "OptimizeLoss/gradients/Max_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/words/embedding_lookup/Reshape_1_grad/Shape"
  op: "Shape"
  input: "words/embedding_lookup/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/words/embedding_lookup/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/Max_grad/mul"
  input: "OptimizeLoss/gradients/words/embedding_lookup/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\330\032\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/Size"
  op: "Size"
  input: "words/embedding_lookup/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/Size"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/Shape"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/strided_slice/pack"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/strided_slice/pack_1"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/concat"
  op: "Concat"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/concat/concat_dim"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/ExpandDims"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "OptimizeLoss/gradients/words/embedding_lookup/Reshape_1_grad/Reshape"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "words/embedding_lookup/Reshape"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "OptimizeLoss/ScalarSummary"
  op: "ScalarSummary"
  input: "OptimizeLoss/ScalarSummary/tags"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "OptimizeLoss/beta1_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/beta1_power/Assign"
  op: "Assign"
  input: "OptimizeLoss/beta1_power"
  input: "OptimizeLoss/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/beta1_power/read"
  op: "Identity"
  input: "OptimizeLoss/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "OptimizeLoss/beta2_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/beta2_power/Assign"
  op: "Assign"
  input: "OptimizeLoss/beta2_power"
  input: "OptimizeLoss/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/beta2_power/read"
  op: "Identity"
  input: "OptimizeLoss/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/words/words_embeddings/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6872
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/words/words_embeddings/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/words/words_embeddings/Adam"
  input: "OptimizeLoss/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/words/words_embeddings/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/words/words_embeddings/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/words/words_embeddings/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6872
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/words/words_embeddings/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/words/words_embeddings/Adam_1"
  input: "OptimizeLoss/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/words/words_embeddings/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/words/words_embeddings/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/logistic_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/logistic_regression/weights/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/logistic_regression/weights/Adam"
  input: "OptimizeLoss/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/logistic_regression/weights/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/logistic_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/zeros_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/logistic_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/logistic_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/logistic_regression/weights/Adam_1"
  input: "OptimizeLoss/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/logistic_regression/weights/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/logistic_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/zeros_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 29
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/logistic_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/logistic_regression/bias/Adam/Assign"
  op: "Assign"
  input: "OptimizeLoss/logistic_regression/bias/Adam"
  input: "OptimizeLoss/zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/logistic_regression/bias/Adam/read"
  op: "Identity"
  input: "OptimizeLoss/logistic_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/zeros_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 29
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/logistic_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 29
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "OptimizeLoss/logistic_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "OptimizeLoss/logistic_regression/bias/Adam_1"
  input: "OptimizeLoss/zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/logistic_regression/bias/Adam_1/read"
  op: "Identity"
  input: "OptimizeLoss/logistic_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/sub"
  op: "Sub"
  input: "OptimizeLoss/train/update_words/words_embeddings/sub/x"
  input: "OptimizeLoss/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/Sqrt"
  op: "Sqrt"
  input: "OptimizeLoss/train/update_words/words_embeddings/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/mul"
  op: "Mul"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/update_words/words_embeddings/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/sub_1"
  op: "Sub"
  input: "OptimizeLoss/train/update_words/words_embeddings/sub_1/x"
  input: "OptimizeLoss/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/truediv"
  op: "Div"
  input: "OptimizeLoss/train/update_words/words_embeddings/mul"
  input: "OptimizeLoss/train/update_words/words_embeddings/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/sub_2"
  op: "Sub"
  input: "OptimizeLoss/train/update_words/words_embeddings/sub_2/x"
  input: "OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/mul_1"
  op: "Mul"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/Reshape"
  input: "OptimizeLoss/train/update_words/words_embeddings/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/mul_2"
  op: "Mul"
  input: "OptimizeLoss/words/words_embeddings/Adam/read"
  input: "OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/Assign"
  op: "Assign"
  input: "OptimizeLoss/words/words_embeddings/Adam"
  input: "OptimizeLoss/train/update_words/words_embeddings/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/ScatterAdd"
  op: "ScatterAdd"
  input: "OptimizeLoss/train/update_words/words_embeddings/Assign"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/Reshape_1"
  input: "OptimizeLoss/train/update_words/words_embeddings/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/mul_3"
  op: "Mul"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/Reshape"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/sub_3"
  op: "Sub"
  input: "OptimizeLoss/train/update_words/words_embeddings/sub_3/x"
  input: "OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/mul_4"
  op: "Mul"
  input: "OptimizeLoss/train/update_words/words_embeddings/mul_3"
  input: "OptimizeLoss/train/update_words/words_embeddings/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/mul_5"
  op: "Mul"
  input: "OptimizeLoss/words/words_embeddings/Adam_1/read"
  input: "OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/Assign_1"
  op: "Assign"
  input: "OptimizeLoss/words/words_embeddings/Adam_1"
  input: "OptimizeLoss/train/update_words/words_embeddings/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/ScatterAdd_1"
  op: "ScatterAdd"
  input: "OptimizeLoss/train/update_words/words_embeddings/Assign_1"
  input: "OptimizeLoss/gradients/words/embedding_lookup/embedding_lookup_grad/Reshape_1"
  input: "OptimizeLoss/train/update_words/words_embeddings/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/Sqrt_1"
  op: "Sqrt"
  input: "OptimizeLoss/train/update_words/words_embeddings/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/mul_6"
  op: "Mul"
  input: "OptimizeLoss/train/update_words/words_embeddings/truediv"
  input: "OptimizeLoss/train/update_words/words_embeddings/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/add"
  op: "Add"
  input: "OptimizeLoss/train/update_words/words_embeddings/Sqrt_1"
  input: "OptimizeLoss/train/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/truediv_1"
  op: "Div"
  input: "OptimizeLoss/train/update_words/words_embeddings/mul_6"
  input: "OptimizeLoss/train/update_words/words_embeddings/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/AssignSub"
  op: "AssignSub"
  input: "words/words_embeddings"
  input: "OptimizeLoss/train/update_words/words_embeddings/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_words/words_embeddings/group_deps"
  op: "NoOp"
  input: "^OptimizeLoss/train/update_words/words_embeddings/AssignSub"
  input: "^OptimizeLoss/train/update_words/words_embeddings/ScatterAdd"
  input: "^OptimizeLoss/train/update_words/words_embeddings/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/update_logistic_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "logistic_regression/weights"
  input: "OptimizeLoss/logistic_regression/weights/Adam"
  input: "OptimizeLoss/logistic_regression/weights/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/update_logistic_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "logistic_regression/bias"
  input: "OptimizeLoss/logistic_regression/bias/Adam"
  input: "OptimizeLoss/logistic_regression/bias/Adam_1"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/learning_rate/read"
  input: "OptimizeLoss/train/beta1"
  input: "OptimizeLoss/train/beta2"
  input: "OptimizeLoss/train/epsilon"
  input: "OptimizeLoss/gradients/logistic_regression/softmax_classifier/xw_plus_b_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/train/mul"
  op: "Mul"
  input: "OptimizeLoss/beta1_power/read"
  input: "OptimizeLoss/train/beta1"
  input: "^OptimizeLoss/train/update_words/words_embeddings/group_deps"
  input: "^OptimizeLoss/train/update_logistic_regression/weights/ApplyAdam"
  input: "^OptimizeLoss/train/update_logistic_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/Assign"
  op: "Assign"
  input: "OptimizeLoss/beta1_power"
  input: "OptimizeLoss/train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/train/mul_1"
  op: "Mul"
  input: "OptimizeLoss/beta2_power/read"
  input: "OptimizeLoss/train/beta2"
  input: "^OptimizeLoss/train/update_words/words_embeddings/group_deps"
  input: "^OptimizeLoss/train/update_logistic_regression/weights/ApplyAdam"
  input: "^OptimizeLoss/train/update_logistic_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/train/Assign_1"
  op: "Assign"
  input: "OptimizeLoss/beta2_power"
  input: "OptimizeLoss/train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "OptimizeLoss/train/update"
  op: "NoOp"
  input: "^OptimizeLoss/train/update_words/words_embeddings/group_deps"
  input: "^OptimizeLoss/train/update_logistic_regression/weights/ApplyAdam"
  input: "^OptimizeLoss/train/update_logistic_regression/bias/ApplyAdam"
  input: "^OptimizeLoss/train/Assign"
  input: "^OptimizeLoss/train/Assign_1"
}
node {
  name: "OptimizeLoss/train/value"
  op: "Const"
  input: "^OptimizeLoss/train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "OptimizeLoss/train"
  op: "AssignAdd"
  input: "global_step"
  input: "OptimizeLoss/train/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "OptimizeLoss/control_dependency"
  op: "Identity"
  input: "logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value"
  input: "^OptimizeLoss/train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/softmax_classifier/softmax_cross_entropy_loss/value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "logistic_regression/softmax_classifier/Softmax"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^words/words_embeddings/Assign"
  input: "^logistic_regression/weights/Assign"
  input: "^logistic_regression/bias/Assign"
  input: "^OptimizeLoss/learning_rate/Assign"
  input: "^OptimizeLoss/beta1_power/Assign"
  input: "^OptimizeLoss/beta2_power/Assign"
  input: "^OptimizeLoss/words/words_embeddings/Adam/Assign"
  input: "^OptimizeLoss/words/words_embeddings/Adam_1/Assign"
  input: "^OptimizeLoss/logistic_regression/weights/Adam/Assign"
  input: "^OptimizeLoss/logistic_regression/weights/Adam_1/Assign"
  input: "^OptimizeLoss/logistic_regression/bias/Adam/Assign"
  input: "^OptimizeLoss/logistic_regression/bias/Adam_1/Assign"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "words/words_embeddings"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "logistic_regression/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "logistic_regression/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/words/words_embeddings/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/words/words_embeddings/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/logistic_regression/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/logistic_regression/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/logistic_regression/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "OptimizeLoss/logistic_regression/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/pack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  attr {
    key: "N"
    value {
      i: 13
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/pack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 13
          }
        }
        string_val: "global_step"
        string_val: "words/words_embeddings"
        string_val: "logistic_regression/weights"
        string_val: "logistic_regression/bias"
        string_val: "OptimizeLoss/learning_rate"
        string_val: "OptimizeLoss/beta1_power"
        string_val: "OptimizeLoss/beta2_power"
        string_val: "OptimizeLoss/words/words_embeddings/Adam"
        string_val: "OptimizeLoss/words/words_embeddings/Adam_1"
        string_val: "OptimizeLoss/logistic_regression/weights/Adam"
        string_val: "OptimizeLoss/logistic_regression/weights/Adam_1"
        string_val: "OptimizeLoss/logistic_regression/bias/Adam"
        string_val: "OptimizeLoss/logistic_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 13
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/pack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/pack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "Concat"
  input: "report_uninitialized_variables/boolean_mask/concat/concat_dim"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "logistic_regression/HistogramSummary"
  input: "logistic_regression/HistogramSummary_1"
  input: "logistic_regression/HistogramSummary_2"
  input: "logistic_regression/HistogramSummary_3"
  input: "OptimizeLoss/ScalarSummary"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/Const"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 13
          }
        }
        string_val: "OptimizeLoss/beta1_power"
        string_val: "OptimizeLoss/beta2_power"
        string_val: "OptimizeLoss/learning_rate"
        string_val: "OptimizeLoss/logistic_regression/bias/Adam"
        string_val: "OptimizeLoss/logistic_regression/bias/Adam_1"
        string_val: "OptimizeLoss/logistic_regression/weights/Adam"
        string_val: "OptimizeLoss/logistic_regression/weights/Adam_1"
        string_val: "OptimizeLoss/words/words_embeddings/Adam"
        string_val: "OptimizeLoss/words/words_embeddings/Adam_1"
        string_val: "global_step"
        string_val: "logistic_regression/bias"
        string_val: "logistic_regression/weights"
        string_val: "words/words_embeddings"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 13
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 13
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/ShardedFilename"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "OptimizeLoss/beta1_power"
  input: "OptimizeLoss/beta2_power"
  input: "OptimizeLoss/learning_rate"
  input: "OptimizeLoss/logistic_regression/bias/Adam"
  input: "OptimizeLoss/logistic_regression/bias/Adam_1"
  input: "OptimizeLoss/logistic_regression/weights/Adam"
  input: "OptimizeLoss/logistic_regression/weights/Adam_1"
  input: "OptimizeLoss/words/words_embeddings/Adam"
  input: "OptimizeLoss/words/words_embeddings/Adam_1"
  input: "global_step"
  input: "logistic_regression/bias"
  input: "logistic_regression/weights"
  input: "words/words_embeddings"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/ShardedFilespec"
  op: "ShardedFilespec"
  input: "save/Const"
  input: "save/num_shards"
  input: "^save/control_dependency"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "OptimizeLoss/beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "OptimizeLoss/beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "OptimizeLoss/beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "OptimizeLoss/beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "OptimizeLoss/learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "OptimizeLoss/learning_rate"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "OptimizeLoss/logistic_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "OptimizeLoss/logistic_regression/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "OptimizeLoss/logistic_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "OptimizeLoss/logistic_regression/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "OptimizeLoss/logistic_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "OptimizeLoss/logistic_regression/weights/Adam"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "OptimizeLoss/logistic_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "OptimizeLoss/logistic_regression/weights/Adam_1"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "OptimizeLoss/words/words_embeddings/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "OptimizeLoss/words/words_embeddings/Adam"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "OptimizeLoss/words/words_embeddings/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "OptimizeLoss/words/words_embeddings/Adam_1"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "logistic_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "logistic_regression/bias"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "logistic_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "logistic_regression/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@logistic_regression/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "words/words_embeddings"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: 0
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "words/words_embeddings"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@words/words_embeddings"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6872
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 15
}
